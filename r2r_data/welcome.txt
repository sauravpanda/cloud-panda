R2R: a Production-ready RAG framework
r2rR2R, short for from RAG to Riches, is a Python framework designed for the rapid development and deployment of production-ready Retrieval-Augmented Generation (RAG) systems.

Why did we build this framework?
R2R was conceived to bridge the gap between experimental RAG models and robust, production-ready systems.

Our semi-opinionated framework cuts through the complexity, offering a straightforward path to deploy, adapt, and maintain RAG pipelines in production. We prioritize simplicity and practicality, aiming to set a new industry benchmark for ease of use and effectiveness.

Key Features
🚀 Rapid Deployment: Facilitates a smooth setup and development of production-ready RAG systems.
⚖️ Flexible Standarization: Ingestion, Embedding, and RAG with proper Observability.
🧩 Easy to modify: Provides a structure that can be extended to deploy your own custom pipelines.
📦 Versioning: Ensures your work remains reproducible and traceable through version control.
🔌 Extensibility: Enables a quick and robust integration with various VectorDBs, LLMs and Embeddings Models.
🤖 OSS Driven: Built for and by the OSS community, to help startups and enterprises to quickly build with RAG.
📝 Deployment Support: Available to help you build and deploy your RAG systems end-to-end.
Getting Started
To get started with R2R, we recommend setting up the framework and following an initial example.

Quick Install: Quick setup using pip.
Full Install: A more detailed step-by-step setup aimed at complete environment configuration.
Basic example: A basic example to get you started with R2R with a RAG pipeline in a server and a client to interact with it.
Community
Joining our Discord server is the fastest way to get support and connect with both the R2R team and other developers in the community. Whether you're encountering issues, looking for advice on best practices, or just want to share your experiences, we're here to help. Don't hesitate to ask questions and engage with us; we're keen to support each other in building amazing RAG systems.